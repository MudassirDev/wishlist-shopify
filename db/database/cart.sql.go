// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: cart.sql

package database

import (
	"context"
)

const createCartEntry = `-- name: CreateCartEntry :one
INSERT INTO cart_entries (
  items, customer_id
) VALUES (
  ?, ?
)
RETURNING items, customer_id
`

type CreateCartEntryParams struct {
	Items      string
	CustomerID int64
}

func (q *Queries) CreateCartEntry(ctx context.Context, arg CreateCartEntryParams) (CartEntry, error) {
	row := q.db.QueryRowContext(ctx, createCartEntry, arg.Items, arg.CustomerID)
	var i CartEntry
	err := row.Scan(&i.Items, &i.CustomerID)
	return i, err
}

const getCartEntry = `-- name: GetCartEntry :one
SELECT items, customer_id FROM cart_entries WHERE customer_id = ?
`

func (q *Queries) GetCartEntry(ctx context.Context, customerID int64) (CartEntry, error) {
	row := q.db.QueryRowContext(ctx, getCartEntry, customerID)
	var i CartEntry
	err := row.Scan(&i.Items, &i.CustomerID)
	return i, err
}
